import React, { useState } from 'react';
import axios from 'axios';
import {Link, useParams} from 'react-router-dom';

import Header from '../.././header/Header.jsx';
import Footer from '../.././footer/Footer.jsx';
import LeftBar from '../.././leftBar/LeftBar.jsx';
import RightBar from '../.././rightBar/RightBar.jsx';
import {Bounce, toast, ToastContainer} from "react-toastify";

function Login() {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [headerKey, setHeaderKey] = useState(0);

    const notifyAccept = () => toast.success('ü¶Ñ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!', {
        position: "bottom-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
        transition: Bounce,
    });
    const notifyError = () => toast.error('ü¶Ñ –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞', {
        position: "bottom-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
        transition: Bounce,
    });

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            const response = await axios.post('http://localhost:8080/log', {
                email: email,
                password: password,
            });


            // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É–∫—É
            if (response.status === 200) {
                const sessionId  = response.data.userSession.sessionId;
                console.log(sessionId)
                // –û–±–Ω–æ–≤–ª—è–µ–º –∫—É–∫—É "sessionId"
                document.cookie = `sessionId=${sessionId}; path=/`;

                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                notifyAccept()
                setHeaderKey(prevKey => prevKey + 1);
            } else {
                notifyError()
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ:', error);
            notifyError()
        }
    };

    return (
        <>
            <Header key={headerKey}></Header>
            <div id="content">
                <LeftBar></LeftBar>
                <div id="main_content">
                    <h1 className="center_text">–í—Ö–æ–¥</h1>
                    <div className="auth-container">
                        <form onSubmit={handleSubmit} className="auth-form" id="login-form">
                            <label htmlFor="login-email" className="form-label">
                                –í–∞—à–∞ –ø–æ—á—Ç–∞:
                            </label>
                            <input
                                type="email"
                                id="login-email"
                                name="login-email"
                                className="form-input"
                                required
                                onChange={(e) => setEmail(e.target.value)}
                            />

                            <label htmlFor="login-password" className="form-label">
                                –ü–∞—Ä–æ–ª—å:
                            </label>
                            <input
                                type="password"
                                id="login-password"
                                name="login-password"
                                className="form-input"
                                required
                                onChange={(e) => setPassword(e.target.value)}
                            />

                            <button type="submit" className="form-button">
                                –í–æ–π—Ç–∏
                            </button>
                            <p className="auth-link">
                                –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <Link to={'/req'}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–¥–µ—Å—å</Link>.
                            </p>
                        </form>
                    </div>
                </div>
                <ToastContainer />
                <RightBar></RightBar>

            </div>
            <Footer></Footer>
        </>
    );
}

export default Login;
